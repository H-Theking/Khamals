/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.khamals.reports.menu.sales;

import com.khamals.reports.menu.stock.ItemEnquiryRep;
import com.khamals.reports.tables.TestDeHSSFXSSF;
import Database.DatabaseHelper;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Date;
import java.util.Formatter;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author MINGO LAWRENCE
 */
public class StaffSalesQuery extends javax.swing.JDialog {

    String queryIdentifier, sheetName;
    DatabaseHelper help = new DatabaseHelper();

    /**
     * Creates new form QueryDialog
     *
     * @param parent
     * @param modal
     * @throws java.sql.SQLException
     */
    public StaffSalesQuery(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        try {
            /**
             * As soon as the Mouse Pointer enters the un-obscured portion of
             * the Object's geometry, I would query the database and retrieve a
             * valid list of all the codes for the various items in the
             * warehouse! PRETTY SMART HUH!!!
             */
            String query = "SELECT FIRST_NAME, LAST_NAME FROM LOGIN";
            help.setQuery(query);

            if (help.resultSet.first()) {
                do {

                    staffNameComboBox.addItem(help.resultSet.getString("FIRST_NAME").concat(" ").
                            concat(help.resultSet.getString("LAST_NAME")));
                }   
            while (help.resultSet.next());
        }
        this.setLocationRelativeTo(null);
    }
    catch (SQLException | IllegalStateException ex

    
        ) {
            Logger.getLogger(ItemEnquiryRep.class.getName()).log(Level.SEVERE, null, ex);
    }
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        staffNameLabel = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        finishDateLabel = new javax.swing.JLabel();
        staffNameComboBox = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        startDateChooser = new datechooser.beans.DateChooserCombo();
        endDateChooser = new datechooser.beans.DateChooserCombo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Staff  Sales  Report");
        setName(""); // NOI18N

        jPanel1.setBackground(new java.awt.Color(60, 20, 60));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        staffNameLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        staffNameLabel.setText("Staff  Name:");

        startDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        startDateLabel.setText("From Date:");

        finishDateLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        finishDateLabel.setText("To Date:");

        staffNameComboBox.setBackground(new java.awt.Color(51, 51, 130));
        staffNameComboBox.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        staffNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        searchButton.setBackground(new java.awt.Color(51, 51, 130));
        searchButton.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        startDateChooser.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(222, 222, 222),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    startDateChooser.setCalendarBackground(new java.awt.Color(51, 51, 130));
    startDateChooser.setFieldFont(new java.awt.Font("Times New Roman", java.awt.Font.BOLD, 11));
    startDateChooser.setLocale(new java.util.Locale("en", "GB", ""));

    endDateChooser.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                new java.awt.Color(222, 222, 222),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                new java.awt.Color(222, 222, 222),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                new java.awt.Color(222, 222, 222),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                new java.awt.Color(222, 222, 222),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
endDateChooser.setCalendarBackground(new java.awt.Color(51, 51, 130));
endDateChooser.setFieldFont(new java.awt.Font("Times New Roman", java.awt.Font.BOLD, 11));
endDateChooser.setLocale(new java.util.Locale("en", "GB", ""));
endDateChooser.setNavigateFont(new java.awt.Font("Times New Roman", java.awt.Font.BOLD, 11));

javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
jPanel1.setLayout(jPanel1Layout);
jPanel1Layout.setHorizontalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addGap(30, 30, 30)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(startDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(staffNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
            .addComponent(finishDateLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
            .addComponent(staffNameComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(endDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
            .addComponent(startDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(60, 60, 60))
    .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(138, 138, 138)
        .addComponent(searchButton)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(41, 41, 41)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(staffNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(staffNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(startDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(startDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(22, 22, 22)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(endDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(finishDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(39, 39, 39)
            .addComponent(searchButton)
            .addContainerGap(90, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        
        Formatter format = new Formatter();
        Formatter format1 = new Formatter();

        String staffName = staffNameComboBox.getSelectedItem().toString();
        Date startDate = startDateChooser.getSelectedDate().getTime();
        String startDateString = format.format("%tF", startDate).toString();
        Date endDate = endDateChooser.getSelectedDate().getTime();
        String endDateString = format1.format("%tF", endDate).toString();

                     String query = "SELECT SALES_GENERAL.CASHIER_NAME, SALES_DETAILED.PRODUCT_NAME, "
                            + "SALES_DETAILED.PRODUCT_CODE, SALES_GENERAL.CUSTOMER_NAME, "
                            + "SALES_GENERAL.TOTAL_AMOUNT_PAID "
                            + "FROM SALES_GENERAL INNER JOIN SALES_DETAILED ON SALES_GENERAL.TRANSACTION_ID="
                            + "SALES_DETAILED.TRANSACTION_ID WHERE "
                            + "SALES_GENERAL.CASHIER_NAME='" + staffName + "' AND "
                            + "SALES_GENERAL.TRANSACTION_DATE>='" + startDateString + "' AND "
                            + "SALES_GENERAL.TRANSACTION_DATE<='" + endDateString + "'"
                            + " ORDER BY SALES_GENERAL.TRANSACTION_ID";
                    queryIdentifier = "STAFF SALES";
                    sheetName = "SALES DONE BY STAFF";
 //                    String cashierQuery = "SELECT CASHIER_NAME FROM SALES_GENERAL";
                    try {
                        System.out.println(query);
                        help.setQuery(query);
                        TestDeHSSFXSSF.createEXCELSheet(help, query, sheetName, queryIdentifier);
                        TestDeHSSFXSSF.showOfficeInstalled();
                        format.format("%tF", startDate).close();
                        format1.format("%tF", endDate).close();
                        for (int i = 0; i < help.numberOfRows; i++) {
                            for (int j = 0; j < help.getColumnCount(); j++) {

                                System.out.printf("%s\t", help.getValueAt(i, j).toString());
                            }
                            System.out.println("\n");
                        }

                    } catch (SQLException | IllegalStateException ex) {
                        Logger.getLogger(ItemEnquiryRep.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
            Logger.getLogger(StaffSalesQuery.class.getName()).log(Level.SEVERE, null, ex);
        }

          
    }//GEN-LAST:event_searchButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffSalesQuery.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 

catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffSalesQuery.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 

catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffSalesQuery.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 

catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffSalesQuery.class  

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
        public void run() {
                try {
                    StaffSalesQuery dialog = new StaffSalesQuery(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                

} catch (SQLException ex) {
                    Logger.getLogger(StaffSalesQuery.class  

.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo endDateChooser;
    private javax.swing.JLabel finishDateLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox staffNameComboBox;
    private javax.swing.JLabel staffNameLabel;
    private datechooser.beans.DateChooserCombo startDateChooser;
    private javax.swing.JLabel startDateLabel;
    // End of variables declaration//GEN-END:variables
    
}
