/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ordersAndMeasurements;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import Database.DatabaseHelper;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
/**
 *
 * @author Klexy
 */
public class New_Order extends javax.swing.JFrame {
    DatabaseHelper db;
    String name;
    int SESSION_USER = 1;
    //DATE FORMATTER OBJECT DEFINITION
    SimpleDateFormat formatter;  
    /**
     * Creates new form New_Order
     * @throws java.sql.SQLException
     */
    public New_Order() throws SQLException  {
        try {
            //Setting the use interfae Look-and-Feel to Nimbus
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (ClassNotFoundException ex) {
             } catch (InstantiationException ex) {
            } catch (IllegalAccessException ex) {
             } catch (UnsupportedLookAndFeelException ex) {
            }
        try {
            db = new DatabaseHelper();
        } catch (SQLException ex) {
            Logger.getLogger(New_Order.class.getName()).log(Level.SEVERE, null, ex);
        }
         System.out.println(db);
        initComponents();
      
        //System.out.println(db);
        this.setLocationRelativeTo(null);
        //initializing date formatter
        this.formatter = new SimpleDateFormat("yyyy-MM-dd");
        //MAKE THE ENTRIES FOR A NEW PRODUCT BLUR,
        //ONLY TO BE ACTIVATED WHEN THE NEWPRODUCT CHKBOX IS CLICKED
        makeNewProductEntriesBlur();
        //Load the different customer naes in the database to the Combo_Boxes
        db = new DatabaseHelper();
        loadCustomers();
        
        try {
            //And then load the different products
            loadProducts();
        } catch (SQLException ex) {
            Logger.getLogger(New_Order.class.getName()).log(Level.SEVERE, null, ex);
        }
        //diconnect from database to allow new connections
        //db.disconnectFromDatabase();
        loadImageIcons();
        restrictDatePickers();
        //hide waring messages
        this.warning1Lbl.setVisible(false);
        this.warning2Lbl.setVisible(false);
    }
    
    public void restrictDatePickers(){
        Calendar cal;
        cal = Calendar.getInstance();
        this.placedDatePicker.setDate(cal.getTime());
        this.dueDatePicker.setDate(cal.getTime());
    }
    
    public void loadImageIcons(){
        ImageIcon cancelImageIcon = new ImageIcon("images/cancel.png");
        this.cancelBtn.setIcon(cancelImageIcon);
        ImageIcon submitImageIcon = new ImageIcon("images/browser.png");
        this.submitBtn.setIcon(submitImageIcon);
    }
    
    //function to load the customer combo boxes
    public void loadCustomers(){
        
        String queryString = "select first_name, last_name, id from customers";
        try {
            db=new  DatabaseHelper();
            db.setQuery(queryString);
        } 
        catch(Exception jj)
        {
            System.out.println(jj.getMessage());
        }
        for(int i=0; i<db.numberOfRows; i++){
            
            String firstName;
            firstName = db.getValueAt(i, 0).toString();
            String lastName;
            lastName = db.getValueAt(i, 1).toString();
            String customer_id;
            customer_id = db.getValueAt(i, 2).toString();
            name = firstName + " " + lastName;
            System.out.printf("%s %s\n", firstName, lastName);   
            this.customerCmBox.addItem(new ComboItem(name, customer_id));
        }      
        System.out.println("Finished loading customers");
       
    }
    
    //fnction to load the various products which are in the system
    public void loadProducts() throws SQLException{
        String queryString = "select code, name from product";
        db.setQuery(queryString);
        for(int i=0; i<db.numberOfRows; i++){            
            String code;
            code = db.getValueAt(i, 0).toString(); 
            String name = db.getValueAt(i, 1).toString();
            this.pdtCodeCmBox.addItem(new ComboItem(name, code));
        } 
    }
    
    public void makeNewProductEntriesBlur(){
        this.newPdtBtn.setVisible(false);
    }
    
    public void makeNewProductEntriesClickable(){
        this.newPdtBtn.setVisible(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        cancelBtn = new javax.swing.JButton();
        numberReqJSpinner = new javax.swing.JSpinner();
        submitBtn = new javax.swing.JButton();
        newItemChkBox = new javax.swing.JCheckBox();
        warning2Lbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pdtCodeCmBox = new javax.swing.JComboBox();
        warning1Lbl = new javax.swing.JLabel();
        totalCostTxtFld = new javax.swing.JTextField();
        dueDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        customerCmBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        newPdtBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        requireMeasurementsChkBox = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        placedDatePicker = new org.jdesktop.swingx.JXDatePicker();
        recordAOBtn = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane1.setBackground(new java.awt.Color(153, 153, 153));
        jDesktopPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Record New Order"));

        cancelBtn.setFont(new java.awt.Font("Vani", 1, 12)); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        numberReqJSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), null, null, Integer.valueOf(1)));

        submitBtn.setFont(new java.awt.Font("Vani", 1, 12)); // NOI18N
        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        newItemChkBox.setFont(new java.awt.Font("Vani", 1, 12)); // NOI18N
        newItemChkBox.setForeground(new java.awt.Color(255, 255, 255));
        newItemChkBox.setText("New Item?");
        newItemChkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newItemChkBoxActionPerformed(evt);
            }
        });

        warning2Lbl.setForeground(new java.awt.Color(255, 0, 0));
        warning2Lbl.setText("Select date instead!");

        jLabel9.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Number Requested:");

        warning1Lbl.setForeground(new java.awt.Color(255, 0, 51));
        warning1Lbl.setText("Select date Instead!");

        totalCostTxtFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalCostTxtFldKeyPressed(evt);
            }
        });

        dueDatePicker.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dueDatePickerFocusLost(evt);
            }
        });
        dueDatePicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dueDatePickerKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dueDatePickerKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Date:*");

        jLabel4.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product Name:");

        jLabel2.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer Name:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Describe Product"));

        jLabel5.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Create new Product:");

        newPdtBtn.setText("Click here to register A new product");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newPdtBtn)
                .addGap(138, 138, 138))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPdtBtn)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total Cost:*");

        requireMeasurementsChkBox.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        requireMeasurementsChkBox.setForeground(new java.awt.Color(255, 255, 255));
        requireMeasurementsChkBox.setText("Require Measurements");

        jLabel7.setFont(new java.awt.Font("Vani", 3, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Delivery Date:*");

        placedDatePicker.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                placedDatePickerFocusLost(evt);
            }
        });
        placedDatePicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                placedDatePickerKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                placedDatePickerKeyTyped(evt);
            }
        });

        recordAOBtn.setFont(new java.awt.Font("Vani", 1, 12)); // NOI18N
        recordAOBtn.setText("Record Another Order");
        recordAOBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordAOBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newItemChkBox)
                    .addComponent(requireMeasurementsChkBox)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(numberReqJSpinner))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane1Layout.createSequentialGroup()
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(placedDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(customerCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(pdtCodeCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(submitBtn)
                        .addGap(18, 18, 18)
                        .addComponent(recordAOBtn)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBtn))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dueDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalCostTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(warning1Lbl)
                    .addComponent(warning2Lbl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(warning1Lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(placedDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(customerCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(pdtCodeCmBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(numberReqJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(requireMeasurementsChkBox)
                        .addGap(6, 6, 6)
                        .addComponent(newItemChkBox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dueDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(warning2Lbl)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(totalCostTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBtn)
                    .addComponent(recordAOBtn)
                    .addComponent(cancelBtn))
                .addGap(35, 35, 35))
        );
        jDesktopPane1.setLayer(cancelBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(numberReqJSpinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(submitBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(newItemChkBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(warning2Lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(pdtCodeCmBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(warning1Lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(totalCostTxtFld, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(dueDatePicker, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(customerCmBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(requireMeasurementsChkBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(placedDatePicker, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(recordAOBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        if(checkForValidInputs()){
            try {
                //printNecessaryValues();
                //Check if the product is new, if true then not,                
                submitDataToDatabase();
                //if it is new then submit it to database and register it
                submitDataToDatabaseAndRegisterNewProduct();
            } catch (SQLException ex) {
               }
        } else{
            
        }   
    }//GEN-LAST:event_submitBtnActionPerformed

    public void printNecessaryValues(){
        ComboItem customer = (ComboItem) this.customerCmBox.getSelectedItem();
        ComboItem product = (ComboItem) this.pdtCodeCmBox.getSelectedItem();
        System.out.println("Customer name: " + customer.getValue() + "\tCutomer id: " + customer.getKey());
    }
    
    //If evering else is ok, then save the data to the data base
    public void submitDataToDatabase() throws SQLException{
        //DATE FORMATTER OBJECT DEFINITION
        SimpleDateFormat formatter;
        formatter = new SimpleDateFormat("yyyy-MM-dd");
        //String to determine if the order needs make use of customer measurements
        //Default value of the string is OWOW:-order without measuremnt
        String measure = "OWOM";
        if(this.requireMeasurementsChkBox.isSelected()){
            measure = "OWM";
        }
        
        int numberOfRows = this.numberOfRowsIn("orders");
        ComboItem customer = (ComboItem) this.customerCmBox.getSelectedItem();
        ComboItem product = (ComboItem) this.pdtCodeCmBox.getSelectedItem();
        String queryString = "insert into ORDERS(customer_id, user_id, product_code, number_of_units,"
                + "date_placed, date_due, order_type, total_cost) values("
                + customer.getValue() + ","
                + SESSION_USER + ",'"
                + product.getValue() + "',"
                + this.numberReqJSpinner.getValue().toString() + ", '"
                +  this.formatter.format(this.placedDatePicker.getDate())+ "', '"
                + this.formatter.format(this.dueDatePicker.getDate()) + "', '"
                + measure + "', " + Float.parseFloat(this.totalCostTxtFld.getText()) + ")";
        
        System.out.println(this.placedDatePicker.getLinkDay());
        //execute the query string
        db.setQuery(queryString);
        
        JOptionPane.showMessageDialog(null, "You have suceeded to add an order.\n"
                + "You can view the new order from order history"
                , "Success", JOptionPane.PLAIN_MESSAGE);
        //db.disconnectFromDatabase();
    }
    
    
    //FUNCTION DEFININTION OF FUNCTION TO REGISTE NEW PRODUCT AND SUBMIT ORDER TO DATABASE
    public void submitDataToDatabaseAndRegisterNewProduct(){
        ComboItem customer = (ComboItem) this.customerCmBox.getSelectedItem();
        }
    
    //The method below aims at verify that the input of the form is a valid input
    //it does this by means of a boolean value :- ready that becomes true if everything is fine.
    public boolean checkForValidInputs(){
        boolean ready = true;
        
        return ready;
    }
    private void newItemChkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newItemChkBoxActionPerformed
        // TODO add your handling code here:
        if(this.newItemChkBox.isEnabled())
            this.makeNewProductEntriesClickable();
        if(!this.newItemChkBox.isEnabled())
            this.makeNewProductEntriesBlur();
    }//GEN-LAST:event_newItemChkBoxActionPerformed

    private void recordAOBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordAOBtnActionPerformed
        this.totalCostTxtFld.setText("");
        this.dueDatePicker.setDate(this.dueDatePicker.getLinkDay());
        this.placedDatePicker.setDate(this.placedDatePicker.getLinkDay());
    }//GEN-LAST:event_recordAOBtnActionPerformed

    private void totalCostTxtFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalCostTxtFldKeyPressed
        int k = evt.getKeyCode();
       char c = evt.getKeyChar();
      if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_ENTER) || c == KeyEvent.VK_BACK_SPACE)) {
          JOptionPane.showMessageDialog(null,"Number Required For amount");
        evt.consume();
      }
    }//GEN-LAST:event_totalCostTxtFldKeyPressed

    private void placedDatePickerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_placedDatePickerKeyPressed
        this.warning1Lbl.setVisible(true);
    }//GEN-LAST:event_placedDatePickerKeyPressed

    private void placedDatePickerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_placedDatePickerFocusLost
        this.warning1Lbl.setVisible(false);
    }//GEN-LAST:event_placedDatePickerFocusLost

    private void dueDatePickerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dueDatePickerKeyPressed
        this.warning2Lbl.setVisible(true);
    }//GEN-LAST:event_dueDatePickerKeyPressed

    private void dueDatePickerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dueDatePickerFocusLost
        this.warning2Lbl.setVisible(false);
    }//GEN-LAST:event_dueDatePickerFocusLost

    private void placedDatePickerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_placedDatePickerKeyTyped
        this.warning1Lbl.setVisible(true);
    }//GEN-LAST:event_placedDatePickerKeyTyped

    private void dueDatePickerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dueDatePickerKeyTyped
        this.warning2Lbl.setVisible(true);
    }//GEN-LAST:event_dueDatePickerKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
        } catch (InstantiationException ex) {
        } catch (IllegalAccessException ex) {
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new New_Order().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(New_Order.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox customerCmBox;
    private org.jdesktop.swingx.JXDatePicker dueDatePicker;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox newItemChkBox;
    private javax.swing.JButton newPdtBtn;
    private javax.swing.JSpinner numberReqJSpinner;
    private javax.swing.JComboBox pdtCodeCmBox;
    private org.jdesktop.swingx.JXDatePicker placedDatePicker;
    private javax.swing.JButton recordAOBtn;
    private javax.swing.JCheckBox requireMeasurementsChkBox;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTextField totalCostTxtFld;
    private javax.swing.JLabel warning1Lbl;
    private javax.swing.JLabel warning2Lbl;
    // End of variables declaration//GEN-END:variables


    //method to give me the numbner columns of a table
    public int numberOfRowsIn(String s) throws SQLException{
        String queryString;
        s = "select * from " + s;
        db.setQuery(s);
        int returnValue;
        returnValue = db.getRowCount();
        return returnValue;
    }
}

